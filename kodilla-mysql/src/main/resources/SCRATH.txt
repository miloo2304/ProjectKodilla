-- Tworzenie tabeli USERS
CREATE TABLE USERS (
                       ID SERIAL PRIMARY KEY,
                       FIRSTNAME VARCHAR(100),
                       LASTNAME VARCHAR(100)
);
INSERT INTO USERS (FIRSTNAME, LASTNAME) VALUES
                                            ('John', 'Doe'),
                                            ('Jane', 'Smith'),
                                            ('Alice', 'Johnson'),
                                            ('Bob', 'Brown'),
                                            ('Charlie', 'Davis');

-- Tworzenie tabeli POSTS z kluczem obcym odnoszącym się do USERS.ID
CREATE TABLE POSTS (
                       ID SERIAL PRIMARY KEY,           -- Klucz główny
                       USER_ID BIGINT UNSIGNED NOT NULL, -- Klucz obcy do tabeli USERS.ID
                       BODY VARCHAR(1024),              -- Treść posta
                       FOREIGN KEY (USER_ID)
                           REFERENCES USERS(ID)         -- Więzy integralności
                           ON DELETE CASCADE            -- Usuwanie wpisów powiązanych z usuniętym użytkownikiem
                           ON UPDATE CASCADE            -- Automatyczna propagacja zmian w ID użytkownika
);
-- Posty napisane przez użytkownika o ID = 1 (John Doe)
INSERT INTO POSTS (USER_ID, BODY) VALUES
                                      (1, 'This is my first post!'),
                                      (1, 'Today is a great day!'),
                                      (1, 'I started learning SQL yesterday.'),
                                      (1, 'Looking forward to the next challenge.'),
                                      (1, 'What should I explore next?');

-- Posty napisane przez użytkownika o ID = 2 (Jane Smith)
INSERT INTO POSTS (USER_ID, BODY) VALUES
                                      (2, 'Excited to share my ideas with the world!'),
                                      (2, 'I love working on new projects.'),
                                      (2, 'Coffee makes everything better.'),
                                      (2, 'Can someone help with debugging this issue?'),
                                      (2, 'Just finished reading a great book.');

-- Posty napisane przez użytkownika o ID = 3 (Alice Johnson)
INSERT INTO POSTS (USER_ID, BODY) VALUES
                                      (3, 'What are your favorite coding tools?'),
                                      (3, 'I am exploring React and it’s amazing!'),
                                      (3, 'Debugging is like solving a mystery puzzle.'),
                                      (3, 'Never give up on your learning journey!'),
                                      (3, 'What’s your favorite database?');

-- Posty napisane przez użytkownika o ID = 4 (Bob Brown)
INSERT INTO POSTS (USER_ID, BODY) VALUES
                                      (4, 'I prefer backend development.'),
                                      (4, 'Optimizing queries is really satisfying.'),
                                      (4, 'Today I learned about indexing.'),
                                      (4, 'Does anyone want to collaborate on a project?'),
                                      (4, 'New day, new opportunities.');

-- Posty napisane przez użytkownika o ID = 5 (Charlie Davis)
INSERT INTO POSTS (USER_ID, BODY) VALUES
                                      (5, 'Frontend development is fun and creative.'),
                                      (5, 'Just deployed my first web app.'),
                                      (5, 'CSS can be tricky at times, but rewarding.'),
                                      (5, 'Version control is a lifesaver.'),
                                      (5, 'Looking forward to contributing to open-source.');
CREATE TABLE ISSUESLISTS (
                             ID INT AUTO_INCREMENT PRIMARY KEY,          -- Klucz główny
                             NAME VARCHAR(100) NOT NULL UNIQUE           -- Nazwa listy zadań (unikalna)
);
CREATE TABLE ISSUES (
                        ID INT AUTO_INCREMENT PRIMARY KEY,               -- Klucz główny
                        ISSUESLIST_ID INT NOT NULL,                      -- Klucz obcy do tabeli ISSUESLISTS
                        SUMMARY VARCHAR(255) NOT NULL,                   -- Krótki opis (nazwa) zadania
                        DESCRIPTION TEXT NOT NULL,                       -- Szczegółowy opis zadania
                        USER_ID_ASSIGNEDTO BIGINT UNSIGNED,              -- Klucz obcy do tabeli USERS (zgodny z USERS.ID)
                        CONSTRAINT FK_ISSUES_ISSUESLISTS FOREIGN KEY (ISSUESLIST_ID)
                            REFERENCES ISSUESLISTS(ID) ON DELETE CASCADE,  -- Usunięcie listy zadań usuwa powiązane zadania
                        CONSTRAINT FK_ISSUES_USERS FOREIGN KEY (USER_ID_ASSIGNEDTO)
                            REFERENCES USERS(ID) ON DELETE SET NULL        -- Usunięcie użytkownika ustawia wartość NULL
);
INSERT INTO ISSUESLISTS (NAME) VALUES
                                   ('ToDo'),             -- Lista zadań do wykonania
                                   ('In progress'),      -- Lista zadań w toku
                                   ('Done');             -- Lista zadań ukończonych
-- Zadania dla listy "ToDo" (ISSUESLIST_ID = 1)
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES
                                                                                 (1, 'Write project report', 'Complete the end-of-project report', 1),
                                                                                 (1, 'Prepare presentation', 'Create slides for the quarterly review', 2),
                                                                                 (1, 'Review code', 'Go through the pull request and confirm changes', 3),
                                                                                 (1, 'Test new feature', 'Perform manual testing for the new functionality', 4),
                                                                                 (1, 'Update documentation', 'Revise the user manual with the latest updates', 5);

-- Zadania dla listy "In progress" (ISSUESLIST_ID = 2)
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES
                                                                                 (2, 'Debug login issue', 'Investigate and fix authentication errors', 1),
                                                                                 (2, 'Implement feature X', 'Develop and integrate feature X into the system', 2),
                                                                                 (2, 'Optimize database queries', 'Review and optimize slow SQL queries', 3),
                                                                                 (2, 'Set up CI/CD', 'Configure continuous integration and delivery pipelines', 4),
                                                                                 (2, 'Update React components', 'Refactor and update UI components in React', 5);

-- Zadania dla listy "Done" (ISSUESLIST_ID = 3)
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES
                                                                                 (3, 'Refactor user module', 'Simplify and improve user management module', 1),
                                                                                 (3, 'Fix CSS issues', 'Resolve layout and styling problems on the frontend', 2),
                                                                                 (3, 'Deploy to staging', 'Push the latest changes to the staging environment', 3),
                                                                                 (3, 'Conduct meeting', 'Hold the weekly team meeting to discuss progress', 4),
                                                                                 (3, 'Prepare release notes', 'Draft release notes for the upcoming version', 5);